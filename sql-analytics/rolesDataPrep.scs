  val lines = scala.io.Source.fromFile("roles.txt").getLines.toList
  
  //split email from Name/job description
  val mainFields = lines.map(line => line.split("\t").toList)
  val allFields = mainFields.map(mainField => {
    val emailAdxPrefix = mainField(0)
    val nameJobFields = mainField(1).split("\\s\\s+").toList
    val fields = nameJobFields match {
      case name :: job :: location :: Nil => List(emailAdxPrefix, name, job, location)
      case name :: job :: Nil             => List(emailAdxPrefix, name, job, "Unknown")
      case nameJobField :: Nil            => List(emailAdxPrefix, nameJobField, "Unknown", "Unknown")
      case default => {
        println(s"""Problems parsing ${nameJobFields}""")
        List(emailAdxPrefix, "Unknown", "Unknown", "Unknown")
      }
    }
    if (fields(1) == "xxx") fields.updated(1, "Unknown")
    else fields
  })

  //add header line and comma-separate fields
  val csvLines = List("emailPrefix,Name,Position,Location") ++ allFields.map(fields => fields.mkString(","))
  val csvContent = csvLines.mkString("", "\n", "\n")

  import java.nio.file.{ Paths, Files }
  import java.nio.charset.StandardCharsets

  Files.write(Paths.get("roles.csv"), csvContent.getBytes(StandardCharsets.UTF_8))
